<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>AnalysisSettingsTab</class>
 <widget class="QWidget" name="AnalysisSettingsTab">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1280</width>
    <height>720</height>
   </rect>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget{
	background-color: white;
}

QPushButton {
    background-color:rgb(154, 217, 234) ;
	color: white;
    min-width: 80px;
	min-height: 40px;
	border-style: solid;
	border-color: rgb(154, 217, 234);
	border-width: 5px;
	border-radius: 10px;
}

QPushButton:pressed {
	background-color:rgb(134, 189, 203) ;
	border-color: rgb(134, 189, 203);
	color: rgb(245, 245, 245);
}

QPushButton:flat {
    border: none; /* no border for a flat push button */
}

QPushButton:default {
    border-color: navy; /* make the default button prominent */
}</string>
  </property>
  <layout class="QGridLayout" name="gridLayout_3">
   <item row="0" column="0">
    <widget class="QWidget" name="widget_analysisscope" native="true">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Expanding">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <property name="minimumSize">
      <size>
       <width>300</width>
       <height>0</height>
      </size>
     </property>
     <layout class="QGridLayout" name="gridLayout_2">
      <item row="0" column="0" colspan="4" alignment="Qt::AlignHCenter">
       <widget class="QLabel" name="label">
        <property name="font">
         <font>
          <pointsize>14</pointsize>
          <bold>true</bold>
         </font>
        </property>
        <property name="text">
         <string>Choose analysis scope</string>
        </property>
       </widget>
      </item>
      <item row="5" column="0">
       <widget class="QLabel" name="label_29">
        <property name="font">
         <font>
          <pointsize>12</pointsize>
          <bold>true</bold>
         </font>
        </property>
        <property name="text">
         <string>Speakers</string>
        </property>
       </widget>
      </item>
      <item row="1" column="3">
       <widget class="QCheckBox" name="checkBox_selectall_dvs">
        <property name="maximumSize">
         <size>
          <width>33</width>
          <height>16777215</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true">QCheckBox {
    /* Increase the size of the checkbox */
    width: 30px; /* Adjust width as needed */
    height: 30px; /* Adjust height as needed */
}

QCheckBox::indicator {
    /* Adjust the size and position of the check indicator */
    width: 28px; /* Adjust width as needed */
    height: 28px; /* Adjust height as needed */
    margin: 2px; /* Adjust margin to center the indicator within the checkbox */
}

QCheckBox::indicator:checked {
    /* Adjust the appearance of the checked indicator */
    image: url(:/images/images/checked_icon.png) /* Specify a custom image if desired */
}

QCheckBox::indicator:unchecked {
    /* Adjust the appearance of the unchecked indicator */
    image: url(:/images/images/unchecked_icon.png); /* Specify a custom image if desired */
}

QCheckBox::indicator:hover {
    /* Adjust the appearance of the hover indicator */
    background-color: lightgray; /* Example: change background color when hovering */
}

QCheckBox::indicator:checked:hover {
    /* Adjust the appearance of the checked checkbox when hovering */
    background-color: rgb(255, 166, 167); /* Example: change background color of checked checkbox when hovering */

}

QCheckBox::indicator:unchecked:hover {
    /* Adjust the appearance of the unchecked checkbox when hovering */
    background-color: lightgreen; /* Example: change background color of unchecked checkbox when hovering */
}

</string>
        </property>
        <property name="text">
         <string/>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
       </widget>
      </item>
      <item row="6" column="0" colspan="4">
       <widget class="QScrollArea" name="scrollArea_speakers">
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>250</height>
         </size>
        </property>
        <property name="verticalScrollBarPolicy">
         <enum>Qt::ScrollBarAlwaysOff</enum>
        </property>
        <property name="widgetResizable">
         <bool>true</bool>
        </property>
        <widget class="QWidget" name="scrollArea_speakercontents">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>0</y>
           <width>280</width>
           <height>248</height>
          </rect>
         </property>
         <layout class="QGridLayout" name="gridLayout_5"/>
        </widget>
       </widget>
      </item>
      <item row="3" column="0" colspan="4">
       <widget class="Line" name="line">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Minimum" vsizetype="Expanding">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="frameShadow">
         <enum>QFrame::Plain</enum>
        </property>
        <property name="lineWidth">
         <number>2</number>
        </property>
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
       </widget>
      </item>
      <item row="2" column="0" colspan="4" alignment="Qt::AlignTop">
       <widget class="QScrollArea" name="scrollArea_dvs">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>250</height>
         </size>
        </property>
        <property name="widgetResizable">
         <bool>true</bool>
        </property>
        <widget class="QWidget" name="scrollArea_dvcontents">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>0</y>
           <width>280</width>
           <height>248</height>
          </rect>
         </property>
         <layout class="QGridLayout" name="gridLayout_4"/>
        </widget>
       </widget>
      </item>
      <item row="1" column="0">
       <widget class="QLabel" name="label_51">
        <property name="font">
         <font>
          <pointsize>12</pointsize>
          <bold>true</bold>
         </font>
        </property>
        <property name="text">
         <string>Dependent Variables</string>
        </property>
       </widget>
      </item>
      <item row="5" column="3">
       <widget class="QCheckBox" name="checkBox_selectall_speakers">
        <property name="maximumSize">
         <size>
          <width>33</width>
          <height>16777215</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true">QCheckBox {
    /* Increase the size of the checkbox */
    width: 30px; /* Adjust width as needed */
    height: 30px; /* Adjust height as needed */
}

QCheckBox::indicator {
    /* Adjust the size and position of the check indicator */
    width: 28px; /* Adjust width as needed */
    height: 28px; /* Adjust height as needed */
    margin: 2px; /* Adjust margin to center the indicator within the checkbox */
}

QCheckBox::indicator:checked {
    /* Adjust the appearance of the checked indicator */
    image: url(:/images/images/checked_icon.png) /* Specify a custom image if desired */
}

QCheckBox::indicator:unchecked {
    /* Adjust the appearance of the unchecked indicator */
    image: url(:/images/images/unchecked_icon.png); /* Specify a custom image if desired */
}

QCheckBox::indicator:hover {
    /* Adjust the appearance of the hover indicator */
    background-color: lightgray; /* Example: change background color when hovering */
}

QCheckBox::indicator:checked:hover {
    /* Adjust the appearance of the checked checkbox when hovering */
    background-color: rgb(255, 166, 167); /* Example: change background color of checked checkbox when hovering */

}

QCheckBox::indicator:unchecked:hover {
    /* Adjust the appearance of the unchecked checkbox when hovering */
    background-color: lightgreen; /* Example: change background color of unchecked checkbox when hovering */
}

</string>
        </property>
        <property name="text">
         <string/>
        </property>
        <property name="checked">
         <bool>true</bool>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="0" column="1">
    <widget class="QWidget" name="widget_contents" native="true">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Expanding">
       <horstretch>1</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_3">
      <item>
       <widget class="QScrollArea" name="scrollArea_contentdisplay">
        <property name="frameShadow">
         <enum>QFrame::Plain</enum>
        </property>
        <property name="widgetResizable">
         <bool>true</bool>
        </property>
        <widget class="QWidget" name="scrollAreaWidgetContents_contentdisplay">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>0</y>
           <width>708</width>
           <height>682</height>
          </rect>
         </property>
         <layout class="QGridLayout" name="gridLayout_6">
          <item row="0" column="0">
           <spacer name="horizontalSpacer_2">
            <property name="orientation">
             <enum>Qt::Horizontal</enum>
            </property>
            <property name="sizeType">
             <enum>QSizePolicy::Fixed</enum>
            </property>
            <property name="sizeHint" stdset="0">
             <size>
              <width>20</width>
              <height>20</height>
             </size>
            </property>
           </spacer>
          </item>
         </layout>
        </widget>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item row="0" column="2">
    <widget class="QWidget" name="widget_settings" native="true">
     <property name="sizePolicy">
      <sizepolicy hsizetype="Preferred" vsizetype="Expanding">
       <horstretch>0</horstretch>
       <verstretch>0</verstretch>
      </sizepolicy>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_4">
      <item>
       <layout class="QVBoxLayout" name="verticalLayout_6">
        <item>
         <widget class="QLabel" name="label_highlights">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Maximum">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="font">
           <font>
            <pointsize>12</pointsize>
            <bold>true</bold>
           </font>
          </property>
          <property name="text">
           <string>Highlights</string>
          </property>
          <property name="alignment">
           <set>Qt::AlignCenter</set>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_showfileindicators">
          <property name="text">
           <string>Show file indicators</string>
          </property>
          <property name="checked">
           <bool>true</bool>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_showannotations">
          <property name="text">
           <string>Show annotations</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="checkBox_showspeakers">
          <property name="text">
           <string>Show speakers</string>
          </property>
         </widget>
        </item>
       </layout>
      </item>
      <item alignment="Qt::AlignTop">
       <widget class="QWidget" name="widget_searchwords" native="true">
        <property name="enabled">
         <bool>false</bool>
        </property>
        <layout class="QVBoxLayout" name="verticalLayout_8">
         <item alignment="Qt::AlignTop">
          <widget class="QLabel" name="label_5">
           <property name="text">
            <string>Search words</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QLineEdit" name="lineEdit"/>
         </item>
         <item>
          <widget class="QCheckBox" name="checkBox_multiplewordsearch">
           <property name="text">
            <string>Multiple word search</string>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
      </item>
      <item alignment="Qt::AlignTop">
       <widget class="QWidget" name="widget_searchvars" native="true">
        <property name="enabled">
         <bool>false</bool>
        </property>
        <layout class="QVBoxLayout" name="verticalLayout_7">
         <item>
          <widget class="QLabel" name="label_4">
           <property name="text">
            <string>Search variables</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QComboBox" name="comboBox"/>
         </item>
        </layout>
       </widget>
      </item>
      <item alignment="Qt::AlignBottom">
       <widget class="QWidget" name="widget_buttons" native="true">
        <layout class="QHBoxLayout" name="horizontalLayout">
         <item>
          <widget class="QPushButton" name="btn_close_overview">
           <property name="font">
            <font>
             <pointsize>12</pointsize>
             <bold>true</bold>
            </font>
           </property>
           <property name="text">
            <string>Close
Overview</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QPushButton" name="btn_save_settings">
           <property name="font">
            <font>
             <pointsize>12</pointsize>
             <bold>true</bold>
            </font>
           </property>
           <property name="styleSheet">
            <string notr="true">QPushButton {
	color: white;
	background-color: rgb(0, 170, 0);
	border-color: rgb(0, 170, 0);
	border-radius: 10px;
}

QPushButton:pressed {
	background-color: rgb(0, 140, 0);
	border-color: rgb(0, 140, 0);
}

QPushButton:disabled{
  background-color: rgb(121, 121, 121);
  border-color: rgb(121, 121, 121);
}</string>
           </property>
           <property name="text">
            <string>Save
Settings</string>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
  </layout>
 </widget>
 <resources>
  <include location="resources.qrc"/>
 </resources>
 <connections/>
</ui>
